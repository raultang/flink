/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.indicator.kafka;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/**  tags not included but in UbiEvent: current_impr_id, source_impr_id, staticPageType, reservedForFuture, eventAttr, oldSessionSkey, seqNum, sessionStartDt, sojDataDt, version */
@org.apache.avro.specific.AvroGenerated
public class SojEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3229302244058028166L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SojEvent\",\"namespace\":\"behavior.pulsar.sojevent\",\"doc\":\" tags not included but in UbiEvent: current_impr_id, source_impr_id, staticPageType, reservedForFuture, eventAttr, oldSessionSkey, seqNum, sessionStartDt, sojDataDt, version\",\"fields\":[{\"name\":\"rheosHeader\",\"type\":{\"type\":\"record\",\"name\":\"RheosHeader\",\"fields\":[{\"name\":\"eventCreateTimestamp\",\"type\":\"long\"},{\"name\":\"eventSentTimestamp\",\"type\":\"long\"},{\"name\":\"schemaId\",\"type\":\"int\"},{\"name\":\"eventId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"producerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},\"doc\":\"Rheos header\"},{\"name\":\"guid\",\"type\":\"string\"},{\"name\":\"eventTimestamp\",\"type\":\"long\",\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time\"},{\"name\":\"eventCaptureTime\",\"type\":[\"null\",\"long\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case\"},{\"name\":\"requestCorrelationId\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq\"},{\"name\":\"cguid\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n\"},{\"name\":\"sid\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id\"},{\"name\":\"pageId\",\"type\":[\"null\",\"int\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag p\"},{\"name\":\"pageName\",\"type\":[\"null\",\"string\"]},{\"name\":\"pageFamily\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag pgf\"},{\"name\":\"eventFamily\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family\"},{\"name\":\"eventAction\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action\"},{\"name\":\"userId\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag u/bu\"},{\"name\":\"clickId\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c\"},{\"name\":\"siteId\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t\"},{\"name\":\"sessionId\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag snid\"},{\"name\":\"seqNum\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag snsq\"},{\"name\":\"ciid\",\"type\":[\"null\",\"string\"]},{\"name\":\"siid\",\"type\":[\"null\",\"string\"]},{\"name\":\"rdt\",\"type\":[\"null\",\"int\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL\"},{\"name\":\"regu\",\"type\":[\"null\",\"int\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU\"},{\"name\":\"iframe\",\"type\":[\"null\",\"boolean\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm\"},{\"name\":\"refererHash\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag r\"},{\"name\":\"sqr\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr\"},{\"name\":\"itemId\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag itm/item\"},{\"name\":\"flags\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag flgs\"},{\"name\":\"urlQueryString\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag Referer\"},{\"name\":\"webServer\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=web server, map from Server\"},{\"name\":\"cookies\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag ck/C\"},{\"name\":\"bot\",\"type\":[\"null\",\"int\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag bott\"},{\"name\":\"clientIP\",\"type\":[\"null\",\"string\"]},{\"name\":\"remoteIP\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP\"},{\"name\":\"agentInfo\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag Agent\"},{\"name\":\"appId\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app\"},{\"name\":\"appVersion\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=application version, map from mav\"},{\"name\":\"osVersion\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv\"},{\"name\":\"trafficSource\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from trffc_src\"},{\"name\":\"cobrand\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from cbrnd\"},{\"name\":\"deviceFamily\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_d\"},{\"name\":\"deviceType\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_dc\"},{\"name\":\"browserVersion\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_bv\"},{\"name\":\"browserFamily\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_bf\"},{\"name\":\"osFamily\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_os\"},{\"name\":\"enrichedOsVersion\",\"type\":[\"null\",\"string\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_osv\"},{\"name\":\"applicationPayload\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"rlogid\",\"type\":[\"null\",\"string\"],\"doc\":\"CAL request log id\",\"default\":null,\"avro.java.string\":\"String\"},{\"name\":\"clientData\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"doc\":\"Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SojEvent> ENCODER =
      new BinaryMessageEncoder<SojEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SojEvent> DECODER =
      new BinaryMessageDecoder<SojEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SojEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SojEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SojEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SojEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SojEvent from a ByteBuffer. */
  public static SojEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Rheos header */
  @Deprecated public RheosHeader rheosHeader;
  @Deprecated public CharSequence guid;
  /** dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time */
  @Deprecated public long eventTimestamp;
  /** dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case */
  @Deprecated public Long eventCaptureTime;
  /** dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq */
  @Deprecated public CharSequence requestCorrelationId;
  /** dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n */
  @Deprecated public CharSequence cguid;
  /** dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id */
  @Deprecated public CharSequence sid;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag p */
  @Deprecated public Integer pageId;
  @Deprecated public CharSequence pageName;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag pgf */
  @Deprecated public CharSequence pageFamily;
  /** dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family */
  @Deprecated public CharSequence eventFamily;
  /** dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action */
  @Deprecated public CharSequence eventAction;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag u/bu */
  @Deprecated public CharSequence userId;
  /** dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c */
  @Deprecated public CharSequence clickId;
  /** dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t */
  @Deprecated public CharSequence siteId;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag snid */
  @Deprecated public CharSequence sessionId;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag snsq */
  @Deprecated public CharSequence seqNum;
  @Deprecated public CharSequence ciid;
  @Deprecated public CharSequence siid;
  /** dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL */
  @Deprecated public Integer rdt;
  /** dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU */
  @Deprecated public Integer regu;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm */
  @Deprecated public Boolean iframe;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag r */
  @Deprecated public CharSequence refererHash;
  /** dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr */
  @Deprecated public CharSequence sqr;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag itm/item */
  @Deprecated public CharSequence itemId;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag flgs */
  @Deprecated public CharSequence flags;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag Referer */
  @Deprecated public CharSequence urlQueryString;
  /** dataClassification=Internal|isEncrypted=false|description=web server, map from Server */
  @Deprecated public CharSequence webServer;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag ck/C */
  @Deprecated public CharSequence cookies;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag bott */
  @Deprecated public Integer bot;
  @Deprecated public CharSequence clientIP;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP */
  @Deprecated public CharSequence remoteIP;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag Agent */
  @Deprecated public CharSequence agentInfo;
  /** dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app */
  @Deprecated public CharSequence appId;
  /** dataClassification=Internal|isEncrypted=false|description=application version, map from mav */
  @Deprecated public CharSequence appVersion;
  /** dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv */
  @Deprecated public CharSequence osVersion;
  /** dataClassification=Internal|isEncrypted=false|description=map from trffc_src */
  @Deprecated public CharSequence trafficSource;
  /** dataClassification=Internal|isEncrypted=false|description=map from cbrnd */
  @Deprecated public CharSequence cobrand;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_d */
  @Deprecated public CharSequence deviceFamily;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_dc */
  @Deprecated public CharSequence deviceType;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_bv */
  @Deprecated public CharSequence browserVersion;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_bf */
  @Deprecated public CharSequence browserFamily;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_os */
  @Deprecated public CharSequence osFamily;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_osv */
  @Deprecated public CharSequence enrichedOsVersion;
  @Deprecated public java.util.Map<CharSequence,CharSequence> applicationPayload;
  /** CAL request log id */
  @Deprecated public CharSequence rlogid;
  /** Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload */
  @Deprecated public java.util.Map<CharSequence,CharSequence> clientData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SojEvent() {}

  /**
   * All-args constructor.
   * @param rheosHeader Rheos header
   * @param guid The new value for guid
   * @param eventTimestamp dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
   * @param eventCaptureTime dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
   * @param requestCorrelationId dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
   * @param cguid dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
   * @param sid dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
   * @param pageId dataClassification=Internal|isEncrypted=false|description=map from tag p
   * @param pageName The new value for pageName
   * @param pageFamily dataClassification=Internal|isEncrypted=false|description=map from tag pgf
   * @param eventFamily dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
   * @param eventAction dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
   * @param userId dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
   * @param clickId dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
   * @param siteId dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
   * @param sessionId dataClassification=Internal|isEncrypted=false|description=map from tag snid
   * @param seqNum dataClassification=Internal|isEncrypted=false|description=map from tag snsq
   * @param ciid The new value for ciid
   * @param siid The new value for siid
   * @param rdt dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
   * @param regu dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
   * @param iframe dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
   * @param refererHash dataClassification=Internal|isEncrypted=false|description=map from tag r
   * @param sqr dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
   * @param itemId dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
   * @param flags dataClassification=Internal|isEncrypted=false|description=map from tag flgs
   * @param urlQueryString dataClassification=Internal|isEncrypted=false|description=map from tag Referer
   * @param webServer dataClassification=Internal|isEncrypted=false|description=web server, map from Server
   * @param cookies dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
   * @param bot dataClassification=Internal|isEncrypted=false|description=map from tag bott
   * @param clientIP The new value for clientIP
   * @param remoteIP dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
   * @param agentInfo dataClassification=Internal|isEncrypted=false|description=map from tag Agent
   * @param appId dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
   * @param appVersion dataClassification=Internal|isEncrypted=false|description=application version, map from mav
   * @param osVersion dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
   * @param trafficSource dataClassification=Internal|isEncrypted=false|description=map from trffc_src
   * @param cobrand dataClassification=Internal|isEncrypted=false|description=map from cbrnd
   * @param deviceFamily dataClassification=Internal|isEncrypted=false|description=map from dd_d
   * @param deviceType dataClassification=Internal|isEncrypted=false|description=map from dd_dc
   * @param browserVersion dataClassification=Internal|isEncrypted=false|description=map from dd_bv
   * @param browserFamily dataClassification=Internal|isEncrypted=false|description=map from dd_bf
   * @param osFamily dataClassification=Internal|isEncrypted=false|description=map from dd_os
   * @param enrichedOsVersion dataClassification=Internal|isEncrypted=false|description=map from dd_osv
   * @param applicationPayload The new value for applicationPayload
   * @param rlogid CAL request log id
   * @param clientData Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
   */
  public SojEvent(RheosHeader rheosHeader, CharSequence guid, Long eventTimestamp, Long eventCaptureTime, CharSequence requestCorrelationId, CharSequence cguid, CharSequence sid, Integer pageId, CharSequence pageName, CharSequence pageFamily, CharSequence eventFamily, CharSequence eventAction, CharSequence userId, CharSequence clickId, CharSequence siteId, CharSequence sessionId, CharSequence seqNum, CharSequence ciid, CharSequence siid, Integer rdt, Integer regu, Boolean iframe, CharSequence refererHash, CharSequence sqr, CharSequence itemId, CharSequence flags, CharSequence urlQueryString, CharSequence webServer, CharSequence cookies, Integer bot, CharSequence clientIP, CharSequence remoteIP, CharSequence agentInfo, CharSequence appId, CharSequence appVersion, CharSequence osVersion, CharSequence trafficSource, CharSequence cobrand, CharSequence deviceFamily, CharSequence deviceType, CharSequence browserVersion, CharSequence browserFamily, CharSequence osFamily, CharSequence enrichedOsVersion, java.util.Map<CharSequence,CharSequence> applicationPayload, CharSequence rlogid, java.util.Map<CharSequence,CharSequence> clientData) {
    this.rheosHeader = rheosHeader;
    this.guid = guid;
    this.eventTimestamp = eventTimestamp;
    this.eventCaptureTime = eventCaptureTime;
    this.requestCorrelationId = requestCorrelationId;
    this.cguid = cguid;
    this.sid = sid;
    this.pageId = pageId;
    this.pageName = pageName;
    this.pageFamily = pageFamily;
    this.eventFamily = eventFamily;
    this.eventAction = eventAction;
    this.userId = userId;
    this.clickId = clickId;
    this.siteId = siteId;
    this.sessionId = sessionId;
    this.seqNum = seqNum;
    this.ciid = ciid;
    this.siid = siid;
    this.rdt = rdt;
    this.regu = regu;
    this.iframe = iframe;
    this.refererHash = refererHash;
    this.sqr = sqr;
    this.itemId = itemId;
    this.flags = flags;
    this.urlQueryString = urlQueryString;
    this.webServer = webServer;
    this.cookies = cookies;
    this.bot = bot;
    this.clientIP = clientIP;
    this.remoteIP = remoteIP;
    this.agentInfo = agentInfo;
    this.appId = appId;
    this.appVersion = appVersion;
    this.osVersion = osVersion;
    this.trafficSource = trafficSource;
    this.cobrand = cobrand;
    this.deviceFamily = deviceFamily;
    this.deviceType = deviceType;
    this.browserVersion = browserVersion;
    this.browserFamily = browserFamily;
    this.osFamily = osFamily;
    this.enrichedOsVersion = enrichedOsVersion;
    this.applicationPayload = applicationPayload;
    this.rlogid = rlogid;
    this.clientData = clientData;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return rheosHeader;
    case 1: return guid;
    case 2: return eventTimestamp;
    case 3: return eventCaptureTime;
    case 4: return requestCorrelationId;
    case 5: return cguid;
    case 6: return sid;
    case 7: return pageId;
    case 8: return pageName;
    case 9: return pageFamily;
    case 10: return eventFamily;
    case 11: return eventAction;
    case 12: return userId;
    case 13: return clickId;
    case 14: return siteId;
    case 15: return sessionId;
    case 16: return seqNum;
    case 17: return ciid;
    case 18: return siid;
    case 19: return rdt;
    case 20: return regu;
    case 21: return iframe;
    case 22: return refererHash;
    case 23: return sqr;
    case 24: return itemId;
    case 25: return flags;
    case 26: return urlQueryString;
    case 27: return webServer;
    case 28: return cookies;
    case 29: return bot;
    case 30: return clientIP;
    case 31: return remoteIP;
    case 32: return agentInfo;
    case 33: return appId;
    case 34: return appVersion;
    case 35: return osVersion;
    case 36: return trafficSource;
    case 37: return cobrand;
    case 38: return deviceFamily;
    case 39: return deviceType;
    case 40: return browserVersion;
    case 41: return browserFamily;
    case 42: return osFamily;
    case 43: return enrichedOsVersion;
    case 44: return applicationPayload;
    case 45: return rlogid;
    case 46: return clientData;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: rheosHeader = (RheosHeader)value$; break;
    case 1: guid = (CharSequence)value$; break;
    case 2: eventTimestamp = (Long)value$; break;
    case 3: eventCaptureTime = (Long)value$; break;
    case 4: requestCorrelationId = (CharSequence)value$; break;
    case 5: cguid = (CharSequence)value$; break;
    case 6: sid = (CharSequence)value$; break;
    case 7: pageId = (Integer)value$; break;
    case 8: pageName = (CharSequence)value$; break;
    case 9: pageFamily = (CharSequence)value$; break;
    case 10: eventFamily = (CharSequence)value$; break;
    case 11: eventAction = (CharSequence)value$; break;
    case 12: userId = (CharSequence)value$; break;
    case 13: clickId = (CharSequence)value$; break;
    case 14: siteId = (CharSequence)value$; break;
    case 15: sessionId = (CharSequence)value$; break;
    case 16: seqNum = (CharSequence)value$; break;
    case 17: ciid = (CharSequence)value$; break;
    case 18: siid = (CharSequence)value$; break;
    case 19: rdt = (Integer)value$; break;
    case 20: regu = (Integer)value$; break;
    case 21: iframe = (Boolean)value$; break;
    case 22: refererHash = (CharSequence)value$; break;
    case 23: sqr = (CharSequence)value$; break;
    case 24: itemId = (CharSequence)value$; break;
    case 25: flags = (CharSequence)value$; break;
    case 26: urlQueryString = (CharSequence)value$; break;
    case 27: webServer = (CharSequence)value$; break;
    case 28: cookies = (CharSequence)value$; break;
    case 29: bot = (Integer)value$; break;
    case 30: clientIP = (CharSequence)value$; break;
    case 31: remoteIP = (CharSequence)value$; break;
    case 32: agentInfo = (CharSequence)value$; break;
    case 33: appId = (CharSequence)value$; break;
    case 34: appVersion = (CharSequence)value$; break;
    case 35: osVersion = (CharSequence)value$; break;
    case 36: trafficSource = (CharSequence)value$; break;
    case 37: cobrand = (CharSequence)value$; break;
    case 38: deviceFamily = (CharSequence)value$; break;
    case 39: deviceType = (CharSequence)value$; break;
    case 40: browserVersion = (CharSequence)value$; break;
    case 41: browserFamily = (CharSequence)value$; break;
    case 42: osFamily = (CharSequence)value$; break;
    case 43: enrichedOsVersion = (CharSequence)value$; break;
    case 44: applicationPayload = (java.util.Map<CharSequence,CharSequence>)value$; break;
    case 45: rlogid = (CharSequence)value$; break;
    case 46: clientData = (java.util.Map<CharSequence,CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'rheosHeader' field.
   * @return Rheos header
   */
  public RheosHeader getRheosHeader() {
    return rheosHeader;
  }

  /**
   * Sets the value of the 'rheosHeader' field.
   * Rheos header
   * @param value the value to set.
   */
  public void setRheosHeader(RheosHeader value) {
    this.rheosHeader = value;
  }

  /**
   * Gets the value of the 'guid' field.
   * @return The value of the 'guid' field.
   */
  public CharSequence getGuid() {
    return guid;
  }

  /**
   * Sets the value of the 'guid' field.
   * @param value the value to set.
   */
  public void setGuid(CharSequence value) {
    this.guid = value;
  }

  /**
   * Gets the value of the 'eventTimestamp' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
   */
  public Long getEventTimestamp() {
    return eventTimestamp;
  }

  /**
   * Sets the value of the 'eventTimestamp' field.
   * dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
   * @param value the value to set.
   */
  public void setEventTimestamp(Long value) {
    this.eventTimestamp = value;
  }

  /**
   * Gets the value of the 'eventCaptureTime' field.
   * @return dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
   */
  public Long getEventCaptureTime() {
    return eventCaptureTime;
  }

  /**
   * Sets the value of the 'eventCaptureTime' field.
   * dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
   * @param value the value to set.
   */
  public void setEventCaptureTime(Long value) {
    this.eventCaptureTime = value;
  }

  /**
   * Gets the value of the 'requestCorrelationId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
   */
  public CharSequence getRequestCorrelationId() {
    return requestCorrelationId;
  }

  /**
   * Sets the value of the 'requestCorrelationId' field.
   * dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
   * @param value the value to set.
   */
  public void setRequestCorrelationId(CharSequence value) {
    this.requestCorrelationId = value;
  }

  /**
   * Gets the value of the 'cguid' field.
   * @return dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
   */
  public CharSequence getCguid() {
    return cguid;
  }

  /**
   * Sets the value of the 'cguid' field.
   * dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
   * @param value the value to set.
   */
  public void setCguid(CharSequence value) {
    this.cguid = value;
  }

  /**
   * Gets the value of the 'sid' field.
   * @return dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
   */
  public CharSequence getSid() {
    return sid;
  }

  /**
   * Sets the value of the 'sid' field.
   * dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
   * @param value the value to set.
   */
  public void setSid(CharSequence value) {
    this.sid = value;
  }

  /**
   * Gets the value of the 'pageId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag p
   */
  public Integer getPageId() {
    return pageId;
  }

  /**
   * Sets the value of the 'pageId' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag p
   * @param value the value to set.
   */
  public void setPageId(Integer value) {
    this.pageId = value;
  }

  /**
   * Gets the value of the 'pageName' field.
   * @return The value of the 'pageName' field.
   */
  public CharSequence getPageName() {
    return pageName;
  }

  /**
   * Sets the value of the 'pageName' field.
   * @param value the value to set.
   */
  public void setPageName(CharSequence value) {
    this.pageName = value;
  }

  /**
   * Gets the value of the 'pageFamily' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag pgf
   */
  public CharSequence getPageFamily() {
    return pageFamily;
  }

  /**
   * Sets the value of the 'pageFamily' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag pgf
   * @param value the value to set.
   */
  public void setPageFamily(CharSequence value) {
    this.pageFamily = value;
  }

  /**
   * Gets the value of the 'eventFamily' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
   */
  public CharSequence getEventFamily() {
    return eventFamily;
  }

  /**
   * Sets the value of the 'eventFamily' field.
   * dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
   * @param value the value to set.
   */
  public void setEventFamily(CharSequence value) {
    this.eventFamily = value;
  }

  /**
   * Gets the value of the 'eventAction' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
   */
  public CharSequence getEventAction() {
    return eventAction;
  }

  /**
   * Sets the value of the 'eventAction' field.
   * dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
   * @param value the value to set.
   */
  public void setEventAction(CharSequence value) {
    this.eventAction = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
   */
  public CharSequence getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
   * @param value the value to set.
   */
  public void setUserId(CharSequence value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'clickId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
   */
  public CharSequence getClickId() {
    return clickId;
  }

  /**
   * Sets the value of the 'clickId' field.
   * dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
   * @param value the value to set.
   */
  public void setClickId(CharSequence value) {
    this.clickId = value;
  }

  /**
   * Gets the value of the 'siteId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
   */
  public CharSequence getSiteId() {
    return siteId;
  }

  /**
   * Sets the value of the 'siteId' field.
   * dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
   * @param value the value to set.
   */
  public void setSiteId(CharSequence value) {
    this.siteId = value;
  }

  /**
   * Gets the value of the 'sessionId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag snid
   */
  public CharSequence getSessionId() {
    return sessionId;
  }

  /**
   * Sets the value of the 'sessionId' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag snid
   * @param value the value to set.
   */
  public void setSessionId(CharSequence value) {
    this.sessionId = value;
  }

  /**
   * Gets the value of the 'seqNum' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag snsq
   */
  public CharSequence getSeqNum() {
    return seqNum;
  }

  /**
   * Sets the value of the 'seqNum' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag snsq
   * @param value the value to set.
   */
  public void setSeqNum(CharSequence value) {
    this.seqNum = value;
  }

  /**
   * Gets the value of the 'ciid' field.
   * @return The value of the 'ciid' field.
   */
  public CharSequence getCiid() {
    return ciid;
  }

  /**
   * Sets the value of the 'ciid' field.
   * @param value the value to set.
   */
  public void setCiid(CharSequence value) {
    this.ciid = value;
  }

  /**
   * Gets the value of the 'siid' field.
   * @return The value of the 'siid' field.
   */
  public CharSequence getSiid() {
    return siid;
  }

  /**
   * Sets the value of the 'siid' field.
   * @param value the value to set.
   */
  public void setSiid(CharSequence value) {
    this.siid = value;
  }

  /**
   * Gets the value of the 'rdt' field.
   * @return dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
   */
  public Integer getRdt() {
    return rdt;
  }

  /**
   * Sets the value of the 'rdt' field.
   * dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
   * @param value the value to set.
   */
  public void setRdt(Integer value) {
    this.rdt = value;
  }

  /**
   * Gets the value of the 'regu' field.
   * @return dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
   */
  public Integer getRegu() {
    return regu;
  }

  /**
   * Sets the value of the 'regu' field.
   * dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
   * @param value the value to set.
   */
  public void setRegu(Integer value) {
    this.regu = value;
  }

  /**
   * Gets the value of the 'iframe' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
   */
  public Boolean getIframe() {
    return iframe;
  }

  /**
   * Sets the value of the 'iframe' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
   * @param value the value to set.
   */
  public void setIframe(Boolean value) {
    this.iframe = value;
  }

  /**
   * Gets the value of the 'refererHash' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag r
   */
  public CharSequence getRefererHash() {
    return refererHash;
  }

  /**
   * Sets the value of the 'refererHash' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag r
   * @param value the value to set.
   */
  public void setRefererHash(CharSequence value) {
    this.refererHash = value;
  }

  /**
   * Gets the value of the 'sqr' field.
   * @return dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
   */
  public CharSequence getSqr() {
    return sqr;
  }

  /**
   * Sets the value of the 'sqr' field.
   * dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
   * @param value the value to set.
   */
  public void setSqr(CharSequence value) {
    this.sqr = value;
  }

  /**
   * Gets the value of the 'itemId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
   */
  public CharSequence getItemId() {
    return itemId;
  }

  /**
   * Sets the value of the 'itemId' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
   * @param value the value to set.
   */
  public void setItemId(CharSequence value) {
    this.itemId = value;
  }

  /**
   * Gets the value of the 'flags' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag flgs
   */
  public CharSequence getFlags() {
    return flags;
  }

  /**
   * Sets the value of the 'flags' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag flgs
   * @param value the value to set.
   */
  public void setFlags(CharSequence value) {
    this.flags = value;
  }

  /**
   * Gets the value of the 'urlQueryString' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag Referer
   */
  public CharSequence getUrlQueryString() {
    return urlQueryString;
  }

  /**
   * Sets the value of the 'urlQueryString' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag Referer
   * @param value the value to set.
   */
  public void setUrlQueryString(CharSequence value) {
    this.urlQueryString = value;
  }

  /**
   * Gets the value of the 'webServer' field.
   * @return dataClassification=Internal|isEncrypted=false|description=web server, map from Server
   */
  public CharSequence getWebServer() {
    return webServer;
  }

  /**
   * Sets the value of the 'webServer' field.
   * dataClassification=Internal|isEncrypted=false|description=web server, map from Server
   * @param value the value to set.
   */
  public void setWebServer(CharSequence value) {
    this.webServer = value;
  }

  /**
   * Gets the value of the 'cookies' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
   */
  public CharSequence getCookies() {
    return cookies;
  }

  /**
   * Sets the value of the 'cookies' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
   * @param value the value to set.
   */
  public void setCookies(CharSequence value) {
    this.cookies = value;
  }

  /**
   * Gets the value of the 'bot' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag bott
   */
  public Integer getBot() {
    return bot;
  }

  /**
   * Sets the value of the 'bot' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag bott
   * @param value the value to set.
   */
  public void setBot(Integer value) {
    this.bot = value;
  }

  /**
   * Gets the value of the 'clientIP' field.
   * @return The value of the 'clientIP' field.
   */
  public CharSequence getClientIP() {
    return clientIP;
  }

  /**
   * Sets the value of the 'clientIP' field.
   * @param value the value to set.
   */
  public void setClientIP(CharSequence value) {
    this.clientIP = value;
  }

  /**
   * Gets the value of the 'remoteIP' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
   */
  public CharSequence getRemoteIP() {
    return remoteIP;
  }

  /**
   * Sets the value of the 'remoteIP' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
   * @param value the value to set.
   */
  public void setRemoteIP(CharSequence value) {
    this.remoteIP = value;
  }

  /**
   * Gets the value of the 'agentInfo' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag Agent
   */
  public CharSequence getAgentInfo() {
    return agentInfo;
  }

  /**
   * Sets the value of the 'agentInfo' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag Agent
   * @param value the value to set.
   */
  public void setAgentInfo(CharSequence value) {
    this.agentInfo = value;
  }

  /**
   * Gets the value of the 'appId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
   */
  public CharSequence getAppId() {
    return appId;
  }

  /**
   * Sets the value of the 'appId' field.
   * dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
   * @param value the value to set.
   */
  public void setAppId(CharSequence value) {
    this.appId = value;
  }

  /**
   * Gets the value of the 'appVersion' field.
   * @return dataClassification=Internal|isEncrypted=false|description=application version, map from mav
   */
  public CharSequence getAppVersion() {
    return appVersion;
  }

  /**
   * Sets the value of the 'appVersion' field.
   * dataClassification=Internal|isEncrypted=false|description=application version, map from mav
   * @param value the value to set.
   */
  public void setAppVersion(CharSequence value) {
    this.appVersion = value;
  }

  /**
   * Gets the value of the 'osVersion' field.
   * @return dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
   */
  public CharSequence getOsVersion() {
    return osVersion;
  }

  /**
   * Sets the value of the 'osVersion' field.
   * dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
   * @param value the value to set.
   */
  public void setOsVersion(CharSequence value) {
    this.osVersion = value;
  }

  /**
   * Gets the value of the 'trafficSource' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from trffc_src
   */
  public CharSequence getTrafficSource() {
    return trafficSource;
  }

  /**
   * Sets the value of the 'trafficSource' field.
   * dataClassification=Internal|isEncrypted=false|description=map from trffc_src
   * @param value the value to set.
   */
  public void setTrafficSource(CharSequence value) {
    this.trafficSource = value;
  }

  /**
   * Gets the value of the 'cobrand' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from cbrnd
   */
  public CharSequence getCobrand() {
    return cobrand;
  }

  /**
   * Sets the value of the 'cobrand' field.
   * dataClassification=Internal|isEncrypted=false|description=map from cbrnd
   * @param value the value to set.
   */
  public void setCobrand(CharSequence value) {
    this.cobrand = value;
  }

  /**
   * Gets the value of the 'deviceFamily' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_d
   */
  public CharSequence getDeviceFamily() {
    return deviceFamily;
  }

  /**
   * Sets the value of the 'deviceFamily' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_d
   * @param value the value to set.
   */
  public void setDeviceFamily(CharSequence value) {
    this.deviceFamily = value;
  }

  /**
   * Gets the value of the 'deviceType' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_dc
   */
  public CharSequence getDeviceType() {
    return deviceType;
  }

  /**
   * Sets the value of the 'deviceType' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_dc
   * @param value the value to set.
   */
  public void setDeviceType(CharSequence value) {
    this.deviceType = value;
  }

  /**
   * Gets the value of the 'browserVersion' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_bv
   */
  public CharSequence getBrowserVersion() {
    return browserVersion;
  }

  /**
   * Sets the value of the 'browserVersion' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_bv
   * @param value the value to set.
   */
  public void setBrowserVersion(CharSequence value) {
    this.browserVersion = value;
  }

  /**
   * Gets the value of the 'browserFamily' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_bf
   */
  public CharSequence getBrowserFamily() {
    return browserFamily;
  }

  /**
   * Sets the value of the 'browserFamily' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_bf
   * @param value the value to set.
   */
  public void setBrowserFamily(CharSequence value) {
    this.browserFamily = value;
  }

  /**
   * Gets the value of the 'osFamily' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_os
   */
  public CharSequence getOsFamily() {
    return osFamily;
  }

  /**
   * Sets the value of the 'osFamily' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_os
   * @param value the value to set.
   */
  public void setOsFamily(CharSequence value) {
    this.osFamily = value;
  }

  /**
   * Gets the value of the 'enrichedOsVersion' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_osv
   */
  public CharSequence getEnrichedOsVersion() {
    return enrichedOsVersion;
  }

  /**
   * Sets the value of the 'enrichedOsVersion' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_osv
   * @param value the value to set.
   */
  public void setEnrichedOsVersion(CharSequence value) {
    this.enrichedOsVersion = value;
  }

  /**
   * Gets the value of the 'applicationPayload' field.
   * @return The value of the 'applicationPayload' field.
   */
  public java.util.Map<CharSequence,CharSequence> getApplicationPayload() {
    return applicationPayload;
  }

  /**
   * Sets the value of the 'applicationPayload' field.
   * @param value the value to set.
   */
  public void setApplicationPayload(java.util.Map<CharSequence,CharSequence> value) {
    this.applicationPayload = value;
  }

  /**
   * Gets the value of the 'rlogid' field.
   * @return CAL request log id
   */
  public CharSequence getRlogid() {
    return rlogid;
  }

  /**
   * Sets the value of the 'rlogid' field.
   * CAL request log id
   * @param value the value to set.
   */
  public void setRlogid(CharSequence value) {
    this.rlogid = value;
  }

  /**
   * Gets the value of the 'clientData' field.
   * @return Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
   */
  public java.util.Map<CharSequence,CharSequence> getClientData() {
    return clientData;
  }

  /**
   * Sets the value of the 'clientData' field.
   * Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
   * @param value the value to set.
   */
  public void setClientData(java.util.Map<CharSequence,CharSequence> value) {
    this.clientData = value;
  }

  /**
   * Creates a new SojEvent RecordBuilder.
   * @return A new SojEvent RecordBuilder
   */
  public static SojEvent.Builder newBuilder() {
    return new SojEvent.Builder();
  }

  /**
   * Creates a new SojEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SojEvent RecordBuilder
   */
  public static SojEvent.Builder newBuilder(SojEvent.Builder other) {
    return new SojEvent.Builder(other);
  }

  /**
   * Creates a new SojEvent RecordBuilder by copying an existing SojEvent instance.
   * @param other The existing instance to copy.
   * @return A new SojEvent RecordBuilder
   */
  public static SojEvent.Builder newBuilder(SojEvent other) {
    return new SojEvent.Builder(other);
  }

  /**
   * RecordBuilder for SojEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SojEvent>
    implements org.apache.avro.data.RecordBuilder<SojEvent> {

    /** Rheos header */
    private RheosHeader rheosHeader;
    private RheosHeader.Builder rheosHeaderBuilder;
    private CharSequence guid;
    /** dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time */
    private long eventTimestamp;
    /** dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case */
    private Long eventCaptureTime;
    /** dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq */
    private CharSequence requestCorrelationId;
    /** dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n */
    private CharSequence cguid;
    /** dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id */
    private CharSequence sid;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag p */
    private Integer pageId;
    private CharSequence pageName;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag pgf */
    private CharSequence pageFamily;
    /** dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family */
    private CharSequence eventFamily;
    /** dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action */
    private CharSequence eventAction;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag u/bu */
    private CharSequence userId;
    /** dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c */
    private CharSequence clickId;
    /** dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t */
    private CharSequence siteId;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag snid */
    private CharSequence sessionId;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag snsq */
    private CharSequence seqNum;
    private CharSequence ciid;
    private CharSequence siid;
    /** dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL */
    private Integer rdt;
    /** dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU */
    private Integer regu;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm */
    private Boolean iframe;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag r */
    private CharSequence refererHash;
    /** dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr */
    private CharSequence sqr;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag itm/item */
    private CharSequence itemId;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag flgs */
    private CharSequence flags;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag Referer */
    private CharSequence urlQueryString;
    /** dataClassification=Internal|isEncrypted=false|description=web server, map from Server */
    private CharSequence webServer;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag ck/C */
    private CharSequence cookies;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag bott */
    private Integer bot;
    private CharSequence clientIP;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP */
    private CharSequence remoteIP;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag Agent */
    private CharSequence agentInfo;
    /** dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app */
    private CharSequence appId;
    /** dataClassification=Internal|isEncrypted=false|description=application version, map from mav */
    private CharSequence appVersion;
    /** dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv */
    private CharSequence osVersion;
    /** dataClassification=Internal|isEncrypted=false|description=map from trffc_src */
    private CharSequence trafficSource;
    /** dataClassification=Internal|isEncrypted=false|description=map from cbrnd */
    private CharSequence cobrand;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_d */
    private CharSequence deviceFamily;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_dc */
    private CharSequence deviceType;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_bv */
    private CharSequence browserVersion;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_bf */
    private CharSequence browserFamily;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_os */
    private CharSequence osFamily;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_osv */
    private CharSequence enrichedOsVersion;
    private java.util.Map<CharSequence,CharSequence> applicationPayload;
    /** CAL request log id */
    private CharSequence rlogid;
    /** Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload */
    private java.util.Map<CharSequence,CharSequence> clientData;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(SojEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      if (other.hasRheosHeaderBuilder()) {
        this.rheosHeaderBuilder = RheosHeader.newBuilder(other.getRheosHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.guid)) {
        this.guid = data().deepCopy(fields()[1].schema(), other.guid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[2].schema(), other.eventTimestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventCaptureTime)) {
        this.eventCaptureTime = data().deepCopy(fields()[3].schema(), other.eventCaptureTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.requestCorrelationId)) {
        this.requestCorrelationId = data().deepCopy(fields()[4].schema(), other.requestCorrelationId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cguid)) {
        this.cguid = data().deepCopy(fields()[5].schema(), other.cguid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sid)) {
        this.sid = data().deepCopy(fields()[6].schema(), other.sid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pageId)) {
        this.pageId = data().deepCopy(fields()[7].schema(), other.pageId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pageName)) {
        this.pageName = data().deepCopy(fields()[8].schema(), other.pageName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.pageFamily)) {
        this.pageFamily = data().deepCopy(fields()[9].schema(), other.pageFamily);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.eventFamily)) {
        this.eventFamily = data().deepCopy(fields()[10].schema(), other.eventFamily);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.eventAction)) {
        this.eventAction = data().deepCopy(fields()[11].schema(), other.eventAction);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.userId)) {
        this.userId = data().deepCopy(fields()[12].schema(), other.userId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.clickId)) {
        this.clickId = data().deepCopy(fields()[13].schema(), other.clickId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.siteId)) {
        this.siteId = data().deepCopy(fields()[14].schema(), other.siteId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[15].schema(), other.sessionId);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.seqNum)) {
        this.seqNum = data().deepCopy(fields()[16].schema(), other.seqNum);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.ciid)) {
        this.ciid = data().deepCopy(fields()[17].schema(), other.ciid);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.siid)) {
        this.siid = data().deepCopy(fields()[18].schema(), other.siid);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.rdt)) {
        this.rdt = data().deepCopy(fields()[19].schema(), other.rdt);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.regu)) {
        this.regu = data().deepCopy(fields()[20].schema(), other.regu);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.iframe)) {
        this.iframe = data().deepCopy(fields()[21].schema(), other.iframe);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.refererHash)) {
        this.refererHash = data().deepCopy(fields()[22].schema(), other.refererHash);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.sqr)) {
        this.sqr = data().deepCopy(fields()[23].schema(), other.sqr);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.itemId)) {
        this.itemId = data().deepCopy(fields()[24].schema(), other.itemId);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.flags)) {
        this.flags = data().deepCopy(fields()[25].schema(), other.flags);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.urlQueryString)) {
        this.urlQueryString = data().deepCopy(fields()[26].schema(), other.urlQueryString);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.webServer)) {
        this.webServer = data().deepCopy(fields()[27].schema(), other.webServer);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.cookies)) {
        this.cookies = data().deepCopy(fields()[28].schema(), other.cookies);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.bot)) {
        this.bot = data().deepCopy(fields()[29].schema(), other.bot);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.clientIP)) {
        this.clientIP = data().deepCopy(fields()[30].schema(), other.clientIP);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.remoteIP)) {
        this.remoteIP = data().deepCopy(fields()[31].schema(), other.remoteIP);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.agentInfo)) {
        this.agentInfo = data().deepCopy(fields()[32].schema(), other.agentInfo);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.appId)) {
        this.appId = data().deepCopy(fields()[33].schema(), other.appId);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.appVersion)) {
        this.appVersion = data().deepCopy(fields()[34].schema(), other.appVersion);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.osVersion)) {
        this.osVersion = data().deepCopy(fields()[35].schema(), other.osVersion);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.trafficSource)) {
        this.trafficSource = data().deepCopy(fields()[36].schema(), other.trafficSource);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.cobrand)) {
        this.cobrand = data().deepCopy(fields()[37].schema(), other.cobrand);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.deviceFamily)) {
        this.deviceFamily = data().deepCopy(fields()[38].schema(), other.deviceFamily);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.deviceType)) {
        this.deviceType = data().deepCopy(fields()[39].schema(), other.deviceType);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.browserVersion)) {
        this.browserVersion = data().deepCopy(fields()[40].schema(), other.browserVersion);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.browserFamily)) {
        this.browserFamily = data().deepCopy(fields()[41].schema(), other.browserFamily);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.osFamily)) {
        this.osFamily = data().deepCopy(fields()[42].schema(), other.osFamily);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.enrichedOsVersion)) {
        this.enrichedOsVersion = data().deepCopy(fields()[43].schema(), other.enrichedOsVersion);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.applicationPayload)) {
        this.applicationPayload = data().deepCopy(fields()[44].schema(), other.applicationPayload);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.rlogid)) {
        this.rlogid = data().deepCopy(fields()[45].schema(), other.rlogid);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.clientData)) {
        this.clientData = data().deepCopy(fields()[46].schema(), other.clientData);
        fieldSetFlags()[46] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SojEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(SojEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      this.rheosHeaderBuilder = null;
      if (isValidValue(fields()[1], other.guid)) {
        this.guid = data().deepCopy(fields()[1].schema(), other.guid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[2].schema(), other.eventTimestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventCaptureTime)) {
        this.eventCaptureTime = data().deepCopy(fields()[3].schema(), other.eventCaptureTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.requestCorrelationId)) {
        this.requestCorrelationId = data().deepCopy(fields()[4].schema(), other.requestCorrelationId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cguid)) {
        this.cguid = data().deepCopy(fields()[5].schema(), other.cguid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sid)) {
        this.sid = data().deepCopy(fields()[6].schema(), other.sid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pageId)) {
        this.pageId = data().deepCopy(fields()[7].schema(), other.pageId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pageName)) {
        this.pageName = data().deepCopy(fields()[8].schema(), other.pageName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.pageFamily)) {
        this.pageFamily = data().deepCopy(fields()[9].schema(), other.pageFamily);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.eventFamily)) {
        this.eventFamily = data().deepCopy(fields()[10].schema(), other.eventFamily);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.eventAction)) {
        this.eventAction = data().deepCopy(fields()[11].schema(), other.eventAction);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.userId)) {
        this.userId = data().deepCopy(fields()[12].schema(), other.userId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.clickId)) {
        this.clickId = data().deepCopy(fields()[13].schema(), other.clickId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.siteId)) {
        this.siteId = data().deepCopy(fields()[14].schema(), other.siteId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[15].schema(), other.sessionId);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.seqNum)) {
        this.seqNum = data().deepCopy(fields()[16].schema(), other.seqNum);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.ciid)) {
        this.ciid = data().deepCopy(fields()[17].schema(), other.ciid);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.siid)) {
        this.siid = data().deepCopy(fields()[18].schema(), other.siid);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.rdt)) {
        this.rdt = data().deepCopy(fields()[19].schema(), other.rdt);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.regu)) {
        this.regu = data().deepCopy(fields()[20].schema(), other.regu);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.iframe)) {
        this.iframe = data().deepCopy(fields()[21].schema(), other.iframe);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.refererHash)) {
        this.refererHash = data().deepCopy(fields()[22].schema(), other.refererHash);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.sqr)) {
        this.sqr = data().deepCopy(fields()[23].schema(), other.sqr);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.itemId)) {
        this.itemId = data().deepCopy(fields()[24].schema(), other.itemId);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.flags)) {
        this.flags = data().deepCopy(fields()[25].schema(), other.flags);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.urlQueryString)) {
        this.urlQueryString = data().deepCopy(fields()[26].schema(), other.urlQueryString);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.webServer)) {
        this.webServer = data().deepCopy(fields()[27].schema(), other.webServer);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.cookies)) {
        this.cookies = data().deepCopy(fields()[28].schema(), other.cookies);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.bot)) {
        this.bot = data().deepCopy(fields()[29].schema(), other.bot);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.clientIP)) {
        this.clientIP = data().deepCopy(fields()[30].schema(), other.clientIP);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.remoteIP)) {
        this.remoteIP = data().deepCopy(fields()[31].schema(), other.remoteIP);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.agentInfo)) {
        this.agentInfo = data().deepCopy(fields()[32].schema(), other.agentInfo);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.appId)) {
        this.appId = data().deepCopy(fields()[33].schema(), other.appId);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.appVersion)) {
        this.appVersion = data().deepCopy(fields()[34].schema(), other.appVersion);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.osVersion)) {
        this.osVersion = data().deepCopy(fields()[35].schema(), other.osVersion);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.trafficSource)) {
        this.trafficSource = data().deepCopy(fields()[36].schema(), other.trafficSource);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.cobrand)) {
        this.cobrand = data().deepCopy(fields()[37].schema(), other.cobrand);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.deviceFamily)) {
        this.deviceFamily = data().deepCopy(fields()[38].schema(), other.deviceFamily);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.deviceType)) {
        this.deviceType = data().deepCopy(fields()[39].schema(), other.deviceType);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.browserVersion)) {
        this.browserVersion = data().deepCopy(fields()[40].schema(), other.browserVersion);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.browserFamily)) {
        this.browserFamily = data().deepCopy(fields()[41].schema(), other.browserFamily);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.osFamily)) {
        this.osFamily = data().deepCopy(fields()[42].schema(), other.osFamily);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.enrichedOsVersion)) {
        this.enrichedOsVersion = data().deepCopy(fields()[43].schema(), other.enrichedOsVersion);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.applicationPayload)) {
        this.applicationPayload = data().deepCopy(fields()[44].schema(), other.applicationPayload);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.rlogid)) {
        this.rlogid = data().deepCopy(fields()[45].schema(), other.rlogid);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.clientData)) {
        this.clientData = data().deepCopy(fields()[46].schema(), other.clientData);
        fieldSetFlags()[46] = true;
      }
    }

    /**
      * Gets the value of the 'rheosHeader' field.
      * Rheos header
      * @return The value.
      */
    public RheosHeader getRheosHeader() {
      return rheosHeader;
    }

    /**
      * Sets the value of the 'rheosHeader' field.
      * Rheos header
      * @param value The value of 'rheosHeader'.
      * @return This builder.
      */
    public SojEvent.Builder setRheosHeader(RheosHeader value) {
      validate(fields()[0], value);
      this.rheosHeaderBuilder = null;
      this.rheosHeader = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'rheosHeader' field has been set.
      * Rheos header
      * @return True if the 'rheosHeader' field has been set, false otherwise.
      */
    public boolean hasRheosHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'rheosHeader' field and creates one if it doesn't exist yet.
     * Rheos header
     * @return This builder.
     */
    public RheosHeader.Builder getRheosHeaderBuilder() {
      if (rheosHeaderBuilder == null) {
        if (hasRheosHeader()) {
          setRheosHeaderBuilder(RheosHeader.newBuilder(rheosHeader));
        } else {
          setRheosHeaderBuilder(RheosHeader.newBuilder());
        }
      }
      return rheosHeaderBuilder;
    }

    /**
     * Sets the Builder instance for the 'rheosHeader' field
     * Rheos header
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public SojEvent.Builder setRheosHeaderBuilder(RheosHeader.Builder value) {
      clearRheosHeader();
      rheosHeaderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'rheosHeader' field has an active Builder instance
     * Rheos header
     * @return True if the 'rheosHeader' field has an active Builder instance
     */
    public boolean hasRheosHeaderBuilder() {
      return rheosHeaderBuilder != null;
    }

    /**
      * Clears the value of the 'rheosHeader' field.
      * Rheos header
      * @return This builder.
      */
    public SojEvent.Builder clearRheosHeader() {
      rheosHeader = null;
      rheosHeaderBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'guid' field.
      * @return The value.
      */
    public CharSequence getGuid() {
      return guid;
    }

    /**
      * Sets the value of the 'guid' field.
      * @param value The value of 'guid'.
      * @return This builder.
      */
    public SojEvent.Builder setGuid(CharSequence value) {
      validate(fields()[1], value);
      this.guid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'guid' field has been set.
      * @return True if the 'guid' field has been set, false otherwise.
      */
    public boolean hasGuid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'guid' field.
      * @return This builder.
      */
    public SojEvent.Builder clearGuid() {
      guid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventTimestamp' field.
      * dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
      * @return The value.
      */
    public Long getEventTimestamp() {
      return eventTimestamp;
    }

    /**
      * Sets the value of the 'eventTimestamp' field.
      * dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
      * @param value The value of 'eventTimestamp'.
      * @return This builder.
      */
    public SojEvent.Builder setEventTimestamp(long value) {
      validate(fields()[2], value);
      this.eventTimestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'eventTimestamp' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
      * @return True if the 'eventTimestamp' field has been set, false otherwise.
      */
    public boolean hasEventTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'eventTimestamp' field.
      * dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
      * @return This builder.
      */
    public SojEvent.Builder clearEventTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventCaptureTime' field.
      * dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
      * @return The value.
      */
    public Long getEventCaptureTime() {
      return eventCaptureTime;
    }

    /**
      * Sets the value of the 'eventCaptureTime' field.
      * dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
      * @param value The value of 'eventCaptureTime'.
      * @return This builder.
      */
    public SojEvent.Builder setEventCaptureTime(Long value) {
      validate(fields()[3], value);
      this.eventCaptureTime = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'eventCaptureTime' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
      * @return True if the 'eventCaptureTime' field has been set, false otherwise.
      */
    public boolean hasEventCaptureTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'eventCaptureTime' field.
      * dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
      * @return This builder.
      */
    public SojEvent.Builder clearEventCaptureTime() {
      eventCaptureTime = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestCorrelationId' field.
      * dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
      * @return The value.
      */
    public CharSequence getRequestCorrelationId() {
      return requestCorrelationId;
    }

    /**
      * Sets the value of the 'requestCorrelationId' field.
      * dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
      * @param value The value of 'requestCorrelationId'.
      * @return This builder.
      */
    public SojEvent.Builder setRequestCorrelationId(CharSequence value) {
      validate(fields()[4], value);
      this.requestCorrelationId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'requestCorrelationId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
      * @return True if the 'requestCorrelationId' field has been set, false otherwise.
      */
    public boolean hasRequestCorrelationId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'requestCorrelationId' field.
      * dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
      * @return This builder.
      */
    public SojEvent.Builder clearRequestCorrelationId() {
      requestCorrelationId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'cguid' field.
      * dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
      * @return The value.
      */
    public CharSequence getCguid() {
      return cguid;
    }

    /**
      * Sets the value of the 'cguid' field.
      * dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
      * @param value The value of 'cguid'.
      * @return This builder.
      */
    public SojEvent.Builder setCguid(CharSequence value) {
      validate(fields()[5], value);
      this.cguid = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'cguid' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
      * @return True if the 'cguid' field has been set, false otherwise.
      */
    public boolean hasCguid() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'cguid' field.
      * dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
      * @return This builder.
      */
    public SojEvent.Builder clearCguid() {
      cguid = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'sid' field.
      * dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
      * @return The value.
      */
    public CharSequence getSid() {
      return sid;
    }

    /**
      * Sets the value of the 'sid' field.
      * dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
      * @param value The value of 'sid'.
      * @return This builder.
      */
    public SojEvent.Builder setSid(CharSequence value) {
      validate(fields()[6], value);
      this.sid = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'sid' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
      * @return True if the 'sid' field has been set, false otherwise.
      */
    public boolean hasSid() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'sid' field.
      * dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
      * @return This builder.
      */
    public SojEvent.Builder clearSid() {
      sid = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag p
      * @return The value.
      */
    public Integer getPageId() {
      return pageId;
    }

    /**
      * Sets the value of the 'pageId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag p
      * @param value The value of 'pageId'.
      * @return This builder.
      */
    public SojEvent.Builder setPageId(Integer value) {
      validate(fields()[7], value);
      this.pageId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'pageId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag p
      * @return True if the 'pageId' field has been set, false otherwise.
      */
    public boolean hasPageId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'pageId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag p
      * @return This builder.
      */
    public SojEvent.Builder clearPageId() {
      pageId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageName' field.
      * @return The value.
      */
    public CharSequence getPageName() {
      return pageName;
    }

    /**
      * Sets the value of the 'pageName' field.
      * @param value The value of 'pageName'.
      * @return This builder.
      */
    public SojEvent.Builder setPageName(CharSequence value) {
      validate(fields()[8], value);
      this.pageName = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'pageName' field has been set.
      * @return True if the 'pageName' field has been set, false otherwise.
      */
    public boolean hasPageName() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'pageName' field.
      * @return This builder.
      */
    public SojEvent.Builder clearPageName() {
      pageName = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag pgf
      * @return The value.
      */
    public CharSequence getPageFamily() {
      return pageFamily;
    }

    /**
      * Sets the value of the 'pageFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag pgf
      * @param value The value of 'pageFamily'.
      * @return This builder.
      */
    public SojEvent.Builder setPageFamily(CharSequence value) {
      validate(fields()[9], value);
      this.pageFamily = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'pageFamily' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag pgf
      * @return True if the 'pageFamily' field has been set, false otherwise.
      */
    public boolean hasPageFamily() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'pageFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag pgf
      * @return This builder.
      */
    public SojEvent.Builder clearPageFamily() {
      pageFamily = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
      * @return The value.
      */
    public CharSequence getEventFamily() {
      return eventFamily;
    }

    /**
      * Sets the value of the 'eventFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
      * @param value The value of 'eventFamily'.
      * @return This builder.
      */
    public SojEvent.Builder setEventFamily(CharSequence value) {
      validate(fields()[10], value);
      this.eventFamily = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'eventFamily' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
      * @return True if the 'eventFamily' field has been set, false otherwise.
      */
    public boolean hasEventFamily() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'eventFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
      * @return This builder.
      */
    public SojEvent.Builder clearEventFamily() {
      eventFamily = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventAction' field.
      * dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
      * @return The value.
      */
    public CharSequence getEventAction() {
      return eventAction;
    }

    /**
      * Sets the value of the 'eventAction' field.
      * dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
      * @param value The value of 'eventAction'.
      * @return This builder.
      */
    public SojEvent.Builder setEventAction(CharSequence value) {
      validate(fields()[11], value);
      this.eventAction = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'eventAction' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
      * @return True if the 'eventAction' field has been set, false otherwise.
      */
    public boolean hasEventAction() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'eventAction' field.
      * dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
      * @return This builder.
      */
    public SojEvent.Builder clearEventAction() {
      eventAction = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
      * @return The value.
      */
    public CharSequence getUserId() {
      return userId;
    }

    /**
      * Sets the value of the 'userId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public SojEvent.Builder setUserId(CharSequence value) {
      validate(fields()[12], value);
      this.userId = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'userId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
      * @return This builder.
      */
    public SojEvent.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'clickId' field.
      * dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
      * @return The value.
      */
    public CharSequence getClickId() {
      return clickId;
    }

    /**
      * Sets the value of the 'clickId' field.
      * dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
      * @param value The value of 'clickId'.
      * @return This builder.
      */
    public SojEvent.Builder setClickId(CharSequence value) {
      validate(fields()[13], value);
      this.clickId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'clickId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
      * @return True if the 'clickId' field has been set, false otherwise.
      */
    public boolean hasClickId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'clickId' field.
      * dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
      * @return This builder.
      */
    public SojEvent.Builder clearClickId() {
      clickId = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'siteId' field.
      * dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
      * @return The value.
      */
    public CharSequence getSiteId() {
      return siteId;
    }

    /**
      * Sets the value of the 'siteId' field.
      * dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
      * @param value The value of 'siteId'.
      * @return This builder.
      */
    public SojEvent.Builder setSiteId(CharSequence value) {
      validate(fields()[14], value);
      this.siteId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'siteId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
      * @return True if the 'siteId' field has been set, false otherwise.
      */
    public boolean hasSiteId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'siteId' field.
      * dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
      * @return This builder.
      */
    public SojEvent.Builder clearSiteId() {
      siteId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snid
      * @return The value.
      */
    public CharSequence getSessionId() {
      return sessionId;
    }

    /**
      * Sets the value of the 'sessionId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snid
      * @param value The value of 'sessionId'.
      * @return This builder.
      */
    public SojEvent.Builder setSessionId(CharSequence value) {
      validate(fields()[15], value);
      this.sessionId = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snid
      * @return True if the 'sessionId' field has been set, false otherwise.
      */
    public boolean hasSessionId() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'sessionId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snid
      * @return This builder.
      */
    public SojEvent.Builder clearSessionId() {
      sessionId = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'seqNum' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snsq
      * @return The value.
      */
    public CharSequence getSeqNum() {
      return seqNum;
    }

    /**
      * Sets the value of the 'seqNum' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snsq
      * @param value The value of 'seqNum'.
      * @return This builder.
      */
    public SojEvent.Builder setSeqNum(CharSequence value) {
      validate(fields()[16], value);
      this.seqNum = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'seqNum' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snsq
      * @return True if the 'seqNum' field has been set, false otherwise.
      */
    public boolean hasSeqNum() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'seqNum' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snsq
      * @return This builder.
      */
    public SojEvent.Builder clearSeqNum() {
      seqNum = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'ciid' field.
      * @return The value.
      */
    public CharSequence getCiid() {
      return ciid;
    }

    /**
      * Sets the value of the 'ciid' field.
      * @param value The value of 'ciid'.
      * @return This builder.
      */
    public SojEvent.Builder setCiid(CharSequence value) {
      validate(fields()[17], value);
      this.ciid = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'ciid' field has been set.
      * @return True if the 'ciid' field has been set, false otherwise.
      */
    public boolean hasCiid() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'ciid' field.
      * @return This builder.
      */
    public SojEvent.Builder clearCiid() {
      ciid = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'siid' field.
      * @return The value.
      */
    public CharSequence getSiid() {
      return siid;
    }

    /**
      * Sets the value of the 'siid' field.
      * @param value The value of 'siid'.
      * @return This builder.
      */
    public SojEvent.Builder setSiid(CharSequence value) {
      validate(fields()[18], value);
      this.siid = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'siid' field has been set.
      * @return True if the 'siid' field has been set, false otherwise.
      */
    public boolean hasSiid() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'siid' field.
      * @return This builder.
      */
    public SojEvent.Builder clearSiid() {
      siid = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'rdt' field.
      * dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
      * @return The value.
      */
    public Integer getRdt() {
      return rdt;
    }

    /**
      * Sets the value of the 'rdt' field.
      * dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
      * @param value The value of 'rdt'.
      * @return This builder.
      */
    public SojEvent.Builder setRdt(Integer value) {
      validate(fields()[19], value);
      this.rdt = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'rdt' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
      * @return True if the 'rdt' field has been set, false otherwise.
      */
    public boolean hasRdt() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'rdt' field.
      * dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
      * @return This builder.
      */
    public SojEvent.Builder clearRdt() {
      rdt = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'regu' field.
      * dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
      * @return The value.
      */
    public Integer getRegu() {
      return regu;
    }

    /**
      * Sets the value of the 'regu' field.
      * dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
      * @param value The value of 'regu'.
      * @return This builder.
      */
    public SojEvent.Builder setRegu(Integer value) {
      validate(fields()[20], value);
      this.regu = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'regu' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
      * @return True if the 'regu' field has been set, false otherwise.
      */
    public boolean hasRegu() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'regu' field.
      * dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
      * @return This builder.
      */
    public SojEvent.Builder clearRegu() {
      regu = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'iframe' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
      * @return The value.
      */
    public Boolean getIframe() {
      return iframe;
    }

    /**
      * Sets the value of the 'iframe' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
      * @param value The value of 'iframe'.
      * @return This builder.
      */
    public SojEvent.Builder setIframe(Boolean value) {
      validate(fields()[21], value);
      this.iframe = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'iframe' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
      * @return True if the 'iframe' field has been set, false otherwise.
      */
    public boolean hasIframe() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'iframe' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
      * @return This builder.
      */
    public SojEvent.Builder clearIframe() {
      iframe = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'refererHash' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag r
      * @return The value.
      */
    public CharSequence getRefererHash() {
      return refererHash;
    }

    /**
      * Sets the value of the 'refererHash' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag r
      * @param value The value of 'refererHash'.
      * @return This builder.
      */
    public SojEvent.Builder setRefererHash(CharSequence value) {
      validate(fields()[22], value);
      this.refererHash = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'refererHash' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag r
      * @return True if the 'refererHash' field has been set, false otherwise.
      */
    public boolean hasRefererHash() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'refererHash' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag r
      * @return This builder.
      */
    public SojEvent.Builder clearRefererHash() {
      refererHash = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'sqr' field.
      * dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
      * @return The value.
      */
    public CharSequence getSqr() {
      return sqr;
    }

    /**
      * Sets the value of the 'sqr' field.
      * dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
      * @param value The value of 'sqr'.
      * @return This builder.
      */
    public SojEvent.Builder setSqr(CharSequence value) {
      validate(fields()[23], value);
      this.sqr = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'sqr' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
      * @return True if the 'sqr' field has been set, false otherwise.
      */
    public boolean hasSqr() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'sqr' field.
      * dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
      * @return This builder.
      */
    public SojEvent.Builder clearSqr() {
      sqr = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'itemId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
      * @return The value.
      */
    public CharSequence getItemId() {
      return itemId;
    }

    /**
      * Sets the value of the 'itemId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
      * @param value The value of 'itemId'.
      * @return This builder.
      */
    public SojEvent.Builder setItemId(CharSequence value) {
      validate(fields()[24], value);
      this.itemId = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'itemId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
      * @return True if the 'itemId' field has been set, false otherwise.
      */
    public boolean hasItemId() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'itemId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
      * @return This builder.
      */
    public SojEvent.Builder clearItemId() {
      itemId = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'flags' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag flgs
      * @return The value.
      */
    public CharSequence getFlags() {
      return flags;
    }

    /**
      * Sets the value of the 'flags' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag flgs
      * @param value The value of 'flags'.
      * @return This builder.
      */
    public SojEvent.Builder setFlags(CharSequence value) {
      validate(fields()[25], value);
      this.flags = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'flags' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag flgs
      * @return True if the 'flags' field has been set, false otherwise.
      */
    public boolean hasFlags() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'flags' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag flgs
      * @return This builder.
      */
    public SojEvent.Builder clearFlags() {
      flags = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'urlQueryString' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Referer
      * @return The value.
      */
    public CharSequence getUrlQueryString() {
      return urlQueryString;
    }

    /**
      * Sets the value of the 'urlQueryString' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Referer
      * @param value The value of 'urlQueryString'.
      * @return This builder.
      */
    public SojEvent.Builder setUrlQueryString(CharSequence value) {
      validate(fields()[26], value);
      this.urlQueryString = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'urlQueryString' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Referer
      * @return True if the 'urlQueryString' field has been set, false otherwise.
      */
    public boolean hasUrlQueryString() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'urlQueryString' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Referer
      * @return This builder.
      */
    public SojEvent.Builder clearUrlQueryString() {
      urlQueryString = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'webServer' field.
      * dataClassification=Internal|isEncrypted=false|description=web server, map from Server
      * @return The value.
      */
    public CharSequence getWebServer() {
      return webServer;
    }

    /**
      * Sets the value of the 'webServer' field.
      * dataClassification=Internal|isEncrypted=false|description=web server, map from Server
      * @param value The value of 'webServer'.
      * @return This builder.
      */
    public SojEvent.Builder setWebServer(CharSequence value) {
      validate(fields()[27], value);
      this.webServer = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'webServer' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=web server, map from Server
      * @return True if the 'webServer' field has been set, false otherwise.
      */
    public boolean hasWebServer() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'webServer' field.
      * dataClassification=Internal|isEncrypted=false|description=web server, map from Server
      * @return This builder.
      */
    public SojEvent.Builder clearWebServer() {
      webServer = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'cookies' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
      * @return The value.
      */
    public CharSequence getCookies() {
      return cookies;
    }

    /**
      * Sets the value of the 'cookies' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
      * @param value The value of 'cookies'.
      * @return This builder.
      */
    public SojEvent.Builder setCookies(CharSequence value) {
      validate(fields()[28], value);
      this.cookies = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'cookies' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
      * @return True if the 'cookies' field has been set, false otherwise.
      */
    public boolean hasCookies() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'cookies' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
      * @return This builder.
      */
    public SojEvent.Builder clearCookies() {
      cookies = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'bot' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag bott
      * @return The value.
      */
    public Integer getBot() {
      return bot;
    }

    /**
      * Sets the value of the 'bot' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag bott
      * @param value The value of 'bot'.
      * @return This builder.
      */
    public SojEvent.Builder setBot(Integer value) {
      validate(fields()[29], value);
      this.bot = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'bot' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag bott
      * @return True if the 'bot' field has been set, false otherwise.
      */
    public boolean hasBot() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'bot' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag bott
      * @return This builder.
      */
    public SojEvent.Builder clearBot() {
      bot = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'clientIP' field.
      * @return The value.
      */
    public CharSequence getClientIP() {
      return clientIP;
    }

    /**
      * Sets the value of the 'clientIP' field.
      * @param value The value of 'clientIP'.
      * @return This builder.
      */
    public SojEvent.Builder setClientIP(CharSequence value) {
      validate(fields()[30], value);
      this.clientIP = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'clientIP' field has been set.
      * @return True if the 'clientIP' field has been set, false otherwise.
      */
    public boolean hasClientIP() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'clientIP' field.
      * @return This builder.
      */
    public SojEvent.Builder clearClientIP() {
      clientIP = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'remoteIP' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
      * @return The value.
      */
    public CharSequence getRemoteIP() {
      return remoteIP;
    }

    /**
      * Sets the value of the 'remoteIP' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
      * @param value The value of 'remoteIP'.
      * @return This builder.
      */
    public SojEvent.Builder setRemoteIP(CharSequence value) {
      validate(fields()[31], value);
      this.remoteIP = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'remoteIP' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
      * @return True if the 'remoteIP' field has been set, false otherwise.
      */
    public boolean hasRemoteIP() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'remoteIP' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
      * @return This builder.
      */
    public SojEvent.Builder clearRemoteIP() {
      remoteIP = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'agentInfo' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Agent
      * @return The value.
      */
    public CharSequence getAgentInfo() {
      return agentInfo;
    }

    /**
      * Sets the value of the 'agentInfo' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Agent
      * @param value The value of 'agentInfo'.
      * @return This builder.
      */
    public SojEvent.Builder setAgentInfo(CharSequence value) {
      validate(fields()[32], value);
      this.agentInfo = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'agentInfo' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Agent
      * @return True if the 'agentInfo' field has been set, false otherwise.
      */
    public boolean hasAgentInfo() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'agentInfo' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Agent
      * @return This builder.
      */
    public SojEvent.Builder clearAgentInfo() {
      agentInfo = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'appId' field.
      * dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
      * @return The value.
      */
    public CharSequence getAppId() {
      return appId;
    }

    /**
      * Sets the value of the 'appId' field.
      * dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
      * @param value The value of 'appId'.
      * @return This builder.
      */
    public SojEvent.Builder setAppId(CharSequence value) {
      validate(fields()[33], value);
      this.appId = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'appId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
      * @return True if the 'appId' field has been set, false otherwise.
      */
    public boolean hasAppId() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'appId' field.
      * dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
      * @return This builder.
      */
    public SojEvent.Builder clearAppId() {
      appId = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'appVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=application version, map from mav
      * @return The value.
      */
    public CharSequence getAppVersion() {
      return appVersion;
    }

    /**
      * Sets the value of the 'appVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=application version, map from mav
      * @param value The value of 'appVersion'.
      * @return This builder.
      */
    public SojEvent.Builder setAppVersion(CharSequence value) {
      validate(fields()[34], value);
      this.appVersion = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'appVersion' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=application version, map from mav
      * @return True if the 'appVersion' field has been set, false otherwise.
      */
    public boolean hasAppVersion() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'appVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=application version, map from mav
      * @return This builder.
      */
    public SojEvent.Builder clearAppVersion() {
      appVersion = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'osVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
      * @return The value.
      */
    public CharSequence getOsVersion() {
      return osVersion;
    }

    /**
      * Sets the value of the 'osVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
      * @param value The value of 'osVersion'.
      * @return This builder.
      */
    public SojEvent.Builder setOsVersion(CharSequence value) {
      validate(fields()[35], value);
      this.osVersion = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'osVersion' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
      * @return True if the 'osVersion' field has been set, false otherwise.
      */
    public boolean hasOsVersion() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'osVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
      * @return This builder.
      */
    public SojEvent.Builder clearOsVersion() {
      osVersion = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'trafficSource' field.
      * dataClassification=Internal|isEncrypted=false|description=map from trffc_src
      * @return The value.
      */
    public CharSequence getTrafficSource() {
      return trafficSource;
    }

    /**
      * Sets the value of the 'trafficSource' field.
      * dataClassification=Internal|isEncrypted=false|description=map from trffc_src
      * @param value The value of 'trafficSource'.
      * @return This builder.
      */
    public SojEvent.Builder setTrafficSource(CharSequence value) {
      validate(fields()[36], value);
      this.trafficSource = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'trafficSource' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from trffc_src
      * @return True if the 'trafficSource' field has been set, false otherwise.
      */
    public boolean hasTrafficSource() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'trafficSource' field.
      * dataClassification=Internal|isEncrypted=false|description=map from trffc_src
      * @return This builder.
      */
    public SojEvent.Builder clearTrafficSource() {
      trafficSource = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'cobrand' field.
      * dataClassification=Internal|isEncrypted=false|description=map from cbrnd
      * @return The value.
      */
    public CharSequence getCobrand() {
      return cobrand;
    }

    /**
      * Sets the value of the 'cobrand' field.
      * dataClassification=Internal|isEncrypted=false|description=map from cbrnd
      * @param value The value of 'cobrand'.
      * @return This builder.
      */
    public SojEvent.Builder setCobrand(CharSequence value) {
      validate(fields()[37], value);
      this.cobrand = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'cobrand' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from cbrnd
      * @return True if the 'cobrand' field has been set, false otherwise.
      */
    public boolean hasCobrand() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'cobrand' field.
      * dataClassification=Internal|isEncrypted=false|description=map from cbrnd
      * @return This builder.
      */
    public SojEvent.Builder clearCobrand() {
      cobrand = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_d
      * @return The value.
      */
    public CharSequence getDeviceFamily() {
      return deviceFamily;
    }

    /**
      * Sets the value of the 'deviceFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_d
      * @param value The value of 'deviceFamily'.
      * @return This builder.
      */
    public SojEvent.Builder setDeviceFamily(CharSequence value) {
      validate(fields()[38], value);
      this.deviceFamily = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceFamily' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_d
      * @return True if the 'deviceFamily' field has been set, false otherwise.
      */
    public boolean hasDeviceFamily() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'deviceFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_d
      * @return This builder.
      */
    public SojEvent.Builder clearDeviceFamily() {
      deviceFamily = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceType' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_dc
      * @return The value.
      */
    public CharSequence getDeviceType() {
      return deviceType;
    }

    /**
      * Sets the value of the 'deviceType' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_dc
      * @param value The value of 'deviceType'.
      * @return This builder.
      */
    public SojEvent.Builder setDeviceType(CharSequence value) {
      validate(fields()[39], value);
      this.deviceType = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceType' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_dc
      * @return True if the 'deviceType' field has been set, false otherwise.
      */
    public boolean hasDeviceType() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'deviceType' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_dc
      * @return This builder.
      */
    public SojEvent.Builder clearDeviceType() {
      deviceType = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'browserVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bv
      * @return The value.
      */
    public CharSequence getBrowserVersion() {
      return browserVersion;
    }

    /**
      * Sets the value of the 'browserVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bv
      * @param value The value of 'browserVersion'.
      * @return This builder.
      */
    public SojEvent.Builder setBrowserVersion(CharSequence value) {
      validate(fields()[40], value);
      this.browserVersion = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'browserVersion' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bv
      * @return True if the 'browserVersion' field has been set, false otherwise.
      */
    public boolean hasBrowserVersion() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'browserVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bv
      * @return This builder.
      */
    public SojEvent.Builder clearBrowserVersion() {
      browserVersion = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'browserFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bf
      * @return The value.
      */
    public CharSequence getBrowserFamily() {
      return browserFamily;
    }

    /**
      * Sets the value of the 'browserFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bf
      * @param value The value of 'browserFamily'.
      * @return This builder.
      */
    public SojEvent.Builder setBrowserFamily(CharSequence value) {
      validate(fields()[41], value);
      this.browserFamily = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'browserFamily' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bf
      * @return True if the 'browserFamily' field has been set, false otherwise.
      */
    public boolean hasBrowserFamily() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'browserFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bf
      * @return This builder.
      */
    public SojEvent.Builder clearBrowserFamily() {
      browserFamily = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'osFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_os
      * @return The value.
      */
    public CharSequence getOsFamily() {
      return osFamily;
    }

    /**
      * Sets the value of the 'osFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_os
      * @param value The value of 'osFamily'.
      * @return This builder.
      */
    public SojEvent.Builder setOsFamily(CharSequence value) {
      validate(fields()[42], value);
      this.osFamily = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'osFamily' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_os
      * @return True if the 'osFamily' field has been set, false otherwise.
      */
    public boolean hasOsFamily() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'osFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_os
      * @return This builder.
      */
    public SojEvent.Builder clearOsFamily() {
      osFamily = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'enrichedOsVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_osv
      * @return The value.
      */
    public CharSequence getEnrichedOsVersion() {
      return enrichedOsVersion;
    }

    /**
      * Sets the value of the 'enrichedOsVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_osv
      * @param value The value of 'enrichedOsVersion'.
      * @return This builder.
      */
    public SojEvent.Builder setEnrichedOsVersion(CharSequence value) {
      validate(fields()[43], value);
      this.enrichedOsVersion = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'enrichedOsVersion' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_osv
      * @return True if the 'enrichedOsVersion' field has been set, false otherwise.
      */
    public boolean hasEnrichedOsVersion() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'enrichedOsVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_osv
      * @return This builder.
      */
    public SojEvent.Builder clearEnrichedOsVersion() {
      enrichedOsVersion = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'applicationPayload' field.
      * @return The value.
      */
    public java.util.Map<CharSequence,CharSequence> getApplicationPayload() {
      return applicationPayload;
    }

    /**
      * Sets the value of the 'applicationPayload' field.
      * @param value The value of 'applicationPayload'.
      * @return This builder.
      */
    public SojEvent.Builder setApplicationPayload(java.util.Map<CharSequence,CharSequence> value) {
      validate(fields()[44], value);
      this.applicationPayload = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'applicationPayload' field has been set.
      * @return True if the 'applicationPayload' field has been set, false otherwise.
      */
    public boolean hasApplicationPayload() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'applicationPayload' field.
      * @return This builder.
      */
    public SojEvent.Builder clearApplicationPayload() {
      applicationPayload = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'rlogid' field.
      * CAL request log id
      * @return The value.
      */
    public CharSequence getRlogid() {
      return rlogid;
    }

    /**
      * Sets the value of the 'rlogid' field.
      * CAL request log id
      * @param value The value of 'rlogid'.
      * @return This builder.
      */
    public SojEvent.Builder setRlogid(CharSequence value) {
      validate(fields()[45], value);
      this.rlogid = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'rlogid' field has been set.
      * CAL request log id
      * @return True if the 'rlogid' field has been set, false otherwise.
      */
    public boolean hasRlogid() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'rlogid' field.
      * CAL request log id
      * @return This builder.
      */
    public SojEvent.Builder clearRlogid() {
      rlogid = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'clientData' field.
      * Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
      * @return The value.
      */
    public java.util.Map<CharSequence,CharSequence> getClientData() {
      return clientData;
    }

    /**
      * Sets the value of the 'clientData' field.
      * Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
      * @param value The value of 'clientData'.
      * @return This builder.
      */
    public SojEvent.Builder setClientData(java.util.Map<CharSequence,CharSequence> value) {
      validate(fields()[46], value);
      this.clientData = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'clientData' field has been set.
      * Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
      * @return True if the 'clientData' field has been set, false otherwise.
      */
    public boolean hasClientData() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'clientData' field.
      * Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
      * @return This builder.
      */
    public SojEvent.Builder clearClientData() {
      clientData = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SojEvent build() {
      try {
        SojEvent record = new SojEvent();
        if (rheosHeaderBuilder != null) {
          record.rheosHeader = this.rheosHeaderBuilder.build();
        } else {
          record.rheosHeader = fieldSetFlags()[0] ? this.rheosHeader : (RheosHeader) defaultValue(fields()[0]);
        }
        record.guid = fieldSetFlags()[1] ? this.guid : (CharSequence) defaultValue(fields()[1]);
        record.eventTimestamp = fieldSetFlags()[2] ? this.eventTimestamp : (Long) defaultValue(fields()[2]);
        record.eventCaptureTime = fieldSetFlags()[3] ? this.eventCaptureTime : (Long) defaultValue(fields()[3]);
        record.requestCorrelationId = fieldSetFlags()[4] ? this.requestCorrelationId : (CharSequence) defaultValue(fields()[4]);
        record.cguid = fieldSetFlags()[5] ? this.cguid : (CharSequence) defaultValue(fields()[5]);
        record.sid = fieldSetFlags()[6] ? this.sid : (CharSequence) defaultValue(fields()[6]);
        record.pageId = fieldSetFlags()[7] ? this.pageId : (Integer) defaultValue(fields()[7]);
        record.pageName = fieldSetFlags()[8] ? this.pageName : (CharSequence) defaultValue(fields()[8]);
        record.pageFamily = fieldSetFlags()[9] ? this.pageFamily : (CharSequence) defaultValue(fields()[9]);
        record.eventFamily = fieldSetFlags()[10] ? this.eventFamily : (CharSequence) defaultValue(fields()[10]);
        record.eventAction = fieldSetFlags()[11] ? this.eventAction : (CharSequence) defaultValue(fields()[11]);
        record.userId = fieldSetFlags()[12] ? this.userId : (CharSequence) defaultValue(fields()[12]);
        record.clickId = fieldSetFlags()[13] ? this.clickId : (CharSequence) defaultValue(fields()[13]);
        record.siteId = fieldSetFlags()[14] ? this.siteId : (CharSequence) defaultValue(fields()[14]);
        record.sessionId = fieldSetFlags()[15] ? this.sessionId : (CharSequence) defaultValue(fields()[15]);
        record.seqNum = fieldSetFlags()[16] ? this.seqNum : (CharSequence) defaultValue(fields()[16]);
        record.ciid = fieldSetFlags()[17] ? this.ciid : (CharSequence) defaultValue(fields()[17]);
        record.siid = fieldSetFlags()[18] ? this.siid : (CharSequence) defaultValue(fields()[18]);
        record.rdt = fieldSetFlags()[19] ? this.rdt : (Integer) defaultValue(fields()[19]);
        record.regu = fieldSetFlags()[20] ? this.regu : (Integer) defaultValue(fields()[20]);
        record.iframe = fieldSetFlags()[21] ? this.iframe : (Boolean) defaultValue(fields()[21]);
        record.refererHash = fieldSetFlags()[22] ? this.refererHash : (CharSequence) defaultValue(fields()[22]);
        record.sqr = fieldSetFlags()[23] ? this.sqr : (CharSequence) defaultValue(fields()[23]);
        record.itemId = fieldSetFlags()[24] ? this.itemId : (CharSequence) defaultValue(fields()[24]);
        record.flags = fieldSetFlags()[25] ? this.flags : (CharSequence) defaultValue(fields()[25]);
        record.urlQueryString = fieldSetFlags()[26] ? this.urlQueryString : (CharSequence) defaultValue(fields()[26]);
        record.webServer = fieldSetFlags()[27] ? this.webServer : (CharSequence) defaultValue(fields()[27]);
        record.cookies = fieldSetFlags()[28] ? this.cookies : (CharSequence) defaultValue(fields()[28]);
        record.bot = fieldSetFlags()[29] ? this.bot : (Integer) defaultValue(fields()[29]);
        record.clientIP = fieldSetFlags()[30] ? this.clientIP : (CharSequence) defaultValue(fields()[30]);
        record.remoteIP = fieldSetFlags()[31] ? this.remoteIP : (CharSequence) defaultValue(fields()[31]);
        record.agentInfo = fieldSetFlags()[32] ? this.agentInfo : (CharSequence) defaultValue(fields()[32]);
        record.appId = fieldSetFlags()[33] ? this.appId : (CharSequence) defaultValue(fields()[33]);
        record.appVersion = fieldSetFlags()[34] ? this.appVersion : (CharSequence) defaultValue(fields()[34]);
        record.osVersion = fieldSetFlags()[35] ? this.osVersion : (CharSequence) defaultValue(fields()[35]);
        record.trafficSource = fieldSetFlags()[36] ? this.trafficSource : (CharSequence) defaultValue(fields()[36]);
        record.cobrand = fieldSetFlags()[37] ? this.cobrand : (CharSequence) defaultValue(fields()[37]);
        record.deviceFamily = fieldSetFlags()[38] ? this.deviceFamily : (CharSequence) defaultValue(fields()[38]);
        record.deviceType = fieldSetFlags()[39] ? this.deviceType : (CharSequence) defaultValue(fields()[39]);
        record.browserVersion = fieldSetFlags()[40] ? this.browserVersion : (CharSequence) defaultValue(fields()[40]);
        record.browserFamily = fieldSetFlags()[41] ? this.browserFamily : (CharSequence) defaultValue(fields()[41]);
        record.osFamily = fieldSetFlags()[42] ? this.osFamily : (CharSequence) defaultValue(fields()[42]);
        record.enrichedOsVersion = fieldSetFlags()[43] ? this.enrichedOsVersion : (CharSequence) defaultValue(fields()[43]);
        record.applicationPayload = fieldSetFlags()[44] ? this.applicationPayload : (java.util.Map<CharSequence,CharSequence>) defaultValue(fields()[44]);
        record.rlogid = fieldSetFlags()[45] ? this.rlogid : (CharSequence) defaultValue(fields()[45]);
        record.clientData = fieldSetFlags()[46] ? this.clientData : (java.util.Map<CharSequence,CharSequence>) defaultValue(fields()[46]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SojEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<SojEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SojEvent>
    READER$ = (org.apache.avro.io.DatumReader<SojEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
